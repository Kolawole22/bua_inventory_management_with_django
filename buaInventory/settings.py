"""
Django settings for buaInventory project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

# from inventorydb.logging import DatabaseHandler
from datetime import timedelta
from pathlib import Path
import os


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-+cv+x%)z6zhb47y-%u$gss5%ag(^5#b8hq(1(p=hpsfkvwu$rt'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['192.168.18.8', '127.0.0.1',
                 'localhost', '192.168.108.160', 'buagroup.local', '192.168.204.8', '192.168.108.172']
# ALLOWED_HOSTS = ['*']
# CORS_ALLOWED_ORIGINS = ['*']
CORS_ALLOW_METHODS = ['DELETE', 'GET', 'OPTIONS', 'PATCH', 'POST', 'PUT']
# CORS_ALLOW_HEADERS = ['*']  # You can customize this as
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_HEADERS = [
    'access-control-allow-origin',
    'authorization',
    'content-type',
    'access-control-allow-headers',
    'x-csrftoken',
    'responseType'
]
CORS_ORIGINS_WHITELIST = (
    'http://127.0.0.1:8000',
    'http://localhost:8000',
    'http://127.0.0.1:5173',
    'http://192.168.18.8:8000',
    'http://192.168.18.8:5173'
    # '192.168.108.160:8000',
    # 'buagroup.local:8000'

)

CSRF_TRUSTED_ORIGINS = [
    'http://127.0.0.1:5173'
    'http://192.168.18.8:8000',
    'http://192.168.18.8:5173'
]

# SESSION_COOKIE_SAMESITE = None
# CSRF_COOKIE_SAMESITE = None
# CSRF_COOKIE_DOMAIN = 'localhost'


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders',
    'django_filters',
    'django_db_logger',
    'drf_api_logger_with_user',

    'inventorydb.apps.InventorydbConfig',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        # 'rest_framework.authentication.SessionAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication'
    ],
    # 'DEFAULT_PERMISSION_CLASSES': [
    #     'rest_framework.permissions.IsAuthenticated',
    # ],
    'EXCEPTION_HANDLER': 'inventorydb.utils.custom_exception_handler',
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    # 'DEFAULT_PERMISSION_CLASSES': [
    #     'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    # ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,

}

DRF_API_LOGGER_DATABASE = True
DRF_API_LOGGER_SIGNAL = True
DRF_API_LOGGER_METHODS = ['POST', 'DELETE', 'PUT']
DRF_API_LOGGER_STATUS_CODES = [200, 400, 404, 500]

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=5),  # Adjust as needed
    'REFRESH_TOKEN_LIFETIME': timedelta(minutes=40),  # Adjust as needed
    "ROTATE_REFRESH_TOKENS": True,
    # "BLACKLIST_AFTER_ROTATION": False,
}

CSRF_COOKIE_SECURE = False
SESSION_COOKIE_SECURE = False

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'drf_api_logger_with_user.middleware.api_logger_middleware.APILoggerMiddleware',
    # 'django.contrib.staticfiles.middleware.StaticFilesMiddleware',
]

ROOT_URLCONF = 'buaInventory.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'buaInventory.wsgi.application'


# SESSION_ENGINE = "django.contrib.sessions.backends.db"
# SESSION_COOKIE_NAME = "your_session_cookie_name"

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'bua_inventory_db',
        'USER': 'root',
        'PASSWORD': 'admin',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'sql8668658',
#         'USER': 'sql8668658',
#         'PASSWORD': 'sQNtSWpdBz',
#         'HOST': 'sql8.freemysqlhosting.net',
#         'PORT': '3306',
#     }
# }

# # inventory-db.cd0ssdmwdqe9.eu-north-1.rds.amazonaws.com

# settings.py

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/


LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Africa/Lagos'

USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
# STATICFILES_DIRS = [
#     BASE_DIR / "static/",
#     # Add other directories if needed
# ]

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

STATIC_ROOT = os.path.join(BASE_DIR, 'static')
# STATIC_ROOT = "C:/Users/HR/projects/react/bua-inventory-management/backend/buaInventory/static"

# Email Config
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'kolaiwalewa@gmail.com'
EMAIL_HOST_PASSWORD = 'gtxz qqrs cnlf hfzw'
EMAIL_PORT = 465
EMAIL_USE_TLS = False
EMAIL_USE_SSL = True
EMAIL_TIMEOUT = 300  # in seconds
DEFAULT_FROM_EMAIL = 'BUA Group IT'
